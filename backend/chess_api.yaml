---
title: WebSocket API for Chess Game
description: API for managing a chess game via WebSocket
version: 1.0.0

endpoints:
  - name: Game Operations
    type: game_operations
    description: Handles game-related operations
    parameters:
      - name: type
        type: string
        description: Type of operation (make_move or get_board_state)
      - name: data
        type: object
        description: Operation-specific data
    operations:
      - name: Make Move
        type: make_move
        description: Sends move information to the server
        parameters:
          - name: pos_start
            type: string
            description: Starting position of the piece
          - name: pos_end
            type: string
            description: Ending position of the piece
        example:
          type: object
          value:
            type: "make_move"
            data:
              pos_start: "e2"
              pos_end: "e4"   
        response:
          type: object
          description: Updated board state or error message
          example:
            type: object
            value:
              error: null
              board_state:
                fen: "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR"
          errorExample:
            type: object
            value:
              error:
                message: Invalid move
              boardState: null
      - name: Get Board State
        type: get_board_state
        description: Retrieves the current state of the board
        example:
          type: object
          value:
            type: "get_board_state" 
        response:
          type: object
          description: Current board state
          example:
            type: object
            value:
              error: null
              board_state:
                fen: "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR"
          errorExample:
            type: object
            value:
              error:
                message: Game not found
              board_state: null

events:
  - name: Connection Established
    type: init_game
    description: Sent to clients upon connection, includes their piece color
    parameters:
      - name: color
        type: string
        description: Player's piece color (w or b)
    example:
      type: object
      value:
        type: "init_game"
        data:
          color: "w"

  - name: Asynchronous Game State Update
    type: update_game_state
    description: Clients receive the updated board state after another player's move
    parameters:
      - name: board_state
        type: object
        description: Current board state
      - name: player_color
        type: string
        description: Current player (w or b)
    example:
      type: object
      value:
        type: "update_game_state"
        data:
          board_state:
            fen: "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR"
          player_color: "w"
